plugins {
    id 'java'
    /*
     * https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
     */
    id 'org.springframework.boot' version '3.0.2'
}

group 'org.adamnok'
version '1.0'

repositories {
    mavenCentral()
}

apply plugin: 'io.spring.dependency-management'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    /*
     * @Website: https://github.com/fracpete/romannumerals4j
     */
    implementation 'com.github.fracpete:romannumerals4j:0.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.mockito:mockito-core:3.+'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

tasks.register('production') {
    def home = "${buildDir}/production"
    def app = "$home/app"
    def lib = "$home/lib"
    doLast {
        delete home
        mkdir home
        mkdir app
        mkdir lib

        /*
         * Application
         */
        copy {
            from file("$buildDir/libs/")
            include "*-plain.jar"
            into file(app)
        }
        /*
         * Dependencies
         */
        copy {
            from file("$buildDir/dependencies/")
            into file(lib)
        }

        /*
         * Production externals
         */
        copy {
            from file("production")
            into file(home)
        }
    }
}

tasks.register('copyDependencies', Copy) {
    from configurations.runtimeClasspath
    into 'build/dependencies'
}

production.dependsOn(copyDependencies, jar)

configure(production) {
    group = 'Production'
    description = 'Generate production code and connected components, script.'
}

configure(copyDependencies) {
    group = 'Production'
    description = 'Copy dependencies/libraries to the production folder.'
}
